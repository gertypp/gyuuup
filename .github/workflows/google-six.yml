name: zzz-google

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Auth ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0

    - name: Enable RDP
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Set RDP authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set local user password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "china@2024" -Force)

    - name: Create and maintain ngrok tunnel
      shell: pwsh
      run: |
        Start-Process -FilePath "./ngrok/ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -s 20
        $tunnels = Invoke-RestMethod -Method Get -Uri "http://localhost:4040/api/tunnels"
        $public_url = $tunnels.tunnels.public_url
        Write-Host "The ngrok tunnel URL is $public_url"
        # Send notification
        $smtpServer = "smtp.gmail.com"
        $smtpPort = 587
        $smtpUsername = "tttttt0090@ggmail.com"
        $smtpPassword = "404904333680812a"
        $fromEmail = "tttttt0090@gmagmail.com"
        $toEmail = "ttt0090@gmail.com"
        $subject = "ngrok tunnel URL"
        $body = "The ngrok tunnel URL is $public_url"

        $securePassword = ConvertTo-SecureString -String $smtpPassword -AsPlainText -Force
        $smtpCredentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $smtpUsername, $securePassword

        Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -UseSsl -Credential $smtpCredentials -From $fromEmail -To $toEmail -Subject $subject -Body $body

        # Keep the step running
        while ($true) { Start-Sleep -s 60 }
